-# Copyright 2012 Twitter, Inc. and others.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.

-if @response and @response.errors.any?
  #error_explanation.alert.alert-error
    %a.close{'data-dismiss' => 'alert', 'href' => '#'} Ã—
    %h4.alert-heading= "#{pluralize(@response.errors.count, "error")} prohibited this response from being saved:"
    %ul
      - @response.errors.full_messages.each do |msg|
        %li= msg

= form_for submit_evaluation_task_path(params[:evaluation_id], params[:id]) do
  %input{:type => 'hidden', :name => 'start_time', :value => Time.now.to_i}
  - @task.evaluation.template.each do |section|
    .section
      - case section[:type]
      - when :_mc
        - mc_q = @task.evaluation.mc_questions.find_by_order(section[:order])
        - name = "evaluation[mc_q][#{mc_q.id}]"
        = render :partial => 'mc_question', :locals => {:mc_q => mc_q, :name => name}
      - when :_fr
        - fr_q = @task.evaluation.fr_questions.find_by_order(section[:order])
        - name = "evaluation[fr_q][#{fr_q.id}]"
        = render :partial => 'fr_question', :locals => {:fr_q => fr_q, :name => name}
      - when :_text
        = render :partial => 'text', :locals => {:content => section[:content], :data => @task.data}
      - when :_header
        = render :partial => 'header', :locals => {:content => section[:content], :data => @task.data}
      - else
        = render :partial => "components/#{section[:type]}", :locals => {:data => resolve_data(section[:data], @task.data)}


  %input.btn.btn-primary{:type => 'submit', :value => 'Submit', :id => 'submitButton'}

  -# Set up MTurk hidden field and javascript validation
  %script{:language => 'Javascript'}
    :plain
      $('form').validate();

